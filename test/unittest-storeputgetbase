#!/usr/bin/env ruby

# Copyright 2021 Ismo Kärkkäinen
# Licensed under Universal Permissive License. See LICENSE.txt.

require './unittest.rb'

$unit_test = 0
require_relative '../lib/storeputgetbase.rb'

$context = 'StorePutGet'
spg = StorePutGetBase.new('table', 'field')
assert(spg.table, 'table', 'Table name ok')
assert(spg.field, 'field', 'Field name ok')
begin
  spg.put({})
  assert(true, false, 'Missing field in item raises')
rescue ArgumentError
  assert(true, true, 'Missing field in item raises')
end
begin
  spg.put({'field' => 'value'})
  assert(true, true, 'Field present')
rescue ArgumentError
  assert(true, false, 'Field present')
end
begin
  spg.get()
  assert(true, false, 'Missing id raises')
rescue ArgumentError
  assert(true, true, 'Missing id raises')
end
begin
  spg.get('value')
  assert(true, true, 'Id present')
rescue ArgumentError
  assert(true, false, 'Id present')
end
begin
  spg.delete()
  assert(true, false, 'Missing id raises')
rescue ArgumentError
  assert(true, true, 'Missing id raises')
end
begin
  spg.delete('value')
  assert(true, true, 'Id present')
rescue ArgumentError
  assert(true, false, 'Id present')
end

exit $unit_test
